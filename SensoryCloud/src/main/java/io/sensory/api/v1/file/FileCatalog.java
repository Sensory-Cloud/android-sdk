// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/file/file.proto

package io.sensory.api.v1.file;

/**
 * <pre>
 * A message containing a list of FileInfos
 * </pre>
 *
 * Protobuf type {@code sensory.api.v1.file.FileCatalog}
 */
public  final class FileCatalog extends
    com.google.protobuf.GeneratedMessageLite<
        FileCatalog, FileCatalog.Builder> implements
    // @@protoc_insertion_point(message_implements:sensory.api.v1.file.FileCatalog)
    FileCatalogOrBuilder {
  private FileCatalog() {
    files_ = emptyProtobufList();
  }
  public static final int FILES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<io.sensory.api.v1.file.FileInfo> files_;
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.sensory.api.v1.file.FileInfo> getFilesList() {
    return files_;
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  public java.util.List<? extends io.sensory.api.v1.file.FileInfoOrBuilder> 
      getFilesOrBuilderList() {
    return files_;
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  @java.lang.Override
  public int getFilesCount() {
    return files_.size();
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  @java.lang.Override
  public io.sensory.api.v1.file.FileInfo getFiles(int index) {
    return files_.get(index);
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  public io.sensory.api.v1.file.FileInfoOrBuilder getFilesOrBuilder(
      int index) {
    return files_.get(index);
  }
  private void ensureFilesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.sensory.api.v1.file.FileInfo> tmp = files_;
    if (!tmp.isModifiable()) {
      files_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void setFiles(
      int index, io.sensory.api.v1.file.FileInfo value) {
    value.getClass();
  ensureFilesIsMutable();
    files_.set(index, value);
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void addFiles(io.sensory.api.v1.file.FileInfo value) {
    value.getClass();
  ensureFilesIsMutable();
    files_.add(value);
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void addFiles(
      int index, io.sensory.api.v1.file.FileInfo value) {
    value.getClass();
  ensureFilesIsMutable();
    files_.add(index, value);
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void addAllFiles(
      java.lang.Iterable<? extends io.sensory.api.v1.file.FileInfo> values) {
    ensureFilesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, files_);
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void clearFiles() {
    files_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The list of files
   * </pre>
   *
   * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
   */
  private void removeFiles(int index) {
    ensureFilesIsMutable();
    files_.remove(index);
  }

  public static final int CATEGORY_FIELD_NUMBER = 2;
  private io.sensory.api.v1.file.VersionedFileCategory category_;
  /**
   * <pre>
   * The category of files in this catalog
   * </pre>
   *
   * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
   */
  @java.lang.Override
  public boolean hasCategory() {
    return category_ != null;
  }
  /**
   * <pre>
   * The category of files in this catalog
   * </pre>
   *
   * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
   */
  @java.lang.Override
  public io.sensory.api.v1.file.VersionedFileCategory getCategory() {
    return category_ == null ? io.sensory.api.v1.file.VersionedFileCategory.getDefaultInstance() : category_;
  }
  /**
   * <pre>
   * The category of files in this catalog
   * </pre>
   *
   * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
   */
  private void setCategory(io.sensory.api.v1.file.VersionedFileCategory value) {
    value.getClass();
  category_ = value;
    
    }
  /**
   * <pre>
   * The category of files in this catalog
   * </pre>
   *
   * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCategory(io.sensory.api.v1.file.VersionedFileCategory value) {
    value.getClass();
  if (category_ != null &&
        category_ != io.sensory.api.v1.file.VersionedFileCategory.getDefaultInstance()) {
      category_ =
        io.sensory.api.v1.file.VersionedFileCategory.newBuilder(category_).mergeFrom(value).buildPartial();
    } else {
      category_ = value;
    }
    
  }
  /**
   * <pre>
   * The category of files in this catalog
   * </pre>
   *
   * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
   */
  private void clearCategory() {  category_ = null;
    
  }

  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.sensory.api.v1.file.FileCatalog parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.sensory.api.v1.file.FileCatalog parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.sensory.api.v1.file.FileCatalog parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.sensory.api.v1.file.FileCatalog prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A message containing a list of FileInfos
   * </pre>
   *
   * Protobuf type {@code sensory.api.v1.file.FileCatalog}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.sensory.api.v1.file.FileCatalog, Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.v1.file.FileCatalog)
      io.sensory.api.v1.file.FileCatalogOrBuilder {
    // Construct using io.sensory.api.v1.file.FileCatalog.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.sensory.api.v1.file.FileInfo> getFilesList() {
      return java.util.Collections.unmodifiableList(
          instance.getFilesList());
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    @java.lang.Override
    public int getFilesCount() {
      return instance.getFilesCount();
    }/**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    @java.lang.Override
    public io.sensory.api.v1.file.FileInfo getFiles(int index) {
      return instance.getFiles(index);
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder setFiles(
        int index, io.sensory.api.v1.file.FileInfo value) {
      copyOnWrite();
      instance.setFiles(index, value);
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder setFiles(
        int index, io.sensory.api.v1.file.FileInfo.Builder builderForValue) {
      copyOnWrite();
      instance.setFiles(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder addFiles(io.sensory.api.v1.file.FileInfo value) {
      copyOnWrite();
      instance.addFiles(value);
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder addFiles(
        int index, io.sensory.api.v1.file.FileInfo value) {
      copyOnWrite();
      instance.addFiles(index, value);
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder addFiles(
        io.sensory.api.v1.file.FileInfo.Builder builderForValue) {
      copyOnWrite();
      instance.addFiles(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder addFiles(
        int index, io.sensory.api.v1.file.FileInfo.Builder builderForValue) {
      copyOnWrite();
      instance.addFiles(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder addAllFiles(
        java.lang.Iterable<? extends io.sensory.api.v1.file.FileInfo> values) {
      copyOnWrite();
      instance.addAllFiles(values);
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder clearFiles() {
      copyOnWrite();
      instance.clearFiles();
      return this;
    }
    /**
     * <pre>
     * The list of files
     * </pre>
     *
     * <code>repeated .sensory.api.v1.file.FileInfo files = 1;</code>
     */
    public Builder removeFiles(int index) {
      copyOnWrite();
      instance.removeFiles(index);
      return this;
    }

    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    @java.lang.Override
    public boolean hasCategory() {
      return instance.hasCategory();
    }
    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    @java.lang.Override
    public io.sensory.api.v1.file.VersionedFileCategory getCategory() {
      return instance.getCategory();
    }
    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    public Builder setCategory(io.sensory.api.v1.file.VersionedFileCategory value) {
      copyOnWrite();
      instance.setCategory(value);
      return this;
      }
    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    public Builder setCategory(
        io.sensory.api.v1.file.VersionedFileCategory.Builder builderForValue) {
      copyOnWrite();
      instance.setCategory(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    public Builder mergeCategory(io.sensory.api.v1.file.VersionedFileCategory value) {
      copyOnWrite();
      instance.mergeCategory(value);
      return this;
    }
    /**
     * <pre>
     * The category of files in this catalog
     * </pre>
     *
     * <code>.sensory.api.v1.file.VersionedFileCategory category = 2;</code>
     */
    public Builder clearCategory() {  copyOnWrite();
      instance.clearCategory();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sensory.api.v1.file.FileCatalog)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.sensory.api.v1.file.FileCatalog();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "files_",
            io.sensory.api.v1.file.FileInfo.class,
            "category_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u001b\u0002\t" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.sensory.api.v1.file.FileCatalog> parser = PARSER;
        if (parser == null) {
          synchronized (io.sensory.api.v1.file.FileCatalog.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.sensory.api.v1.file.FileCatalog>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sensory.api.v1.file.FileCatalog)
  private static final io.sensory.api.v1.file.FileCatalog DEFAULT_INSTANCE;
  static {
    FileCatalog defaultInstance = new FileCatalog();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      FileCatalog.class, defaultInstance);
  }

  public static io.sensory.api.v1.file.FileCatalog getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FileCatalog> PARSER;

  public static com.google.protobuf.Parser<FileCatalog> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

