// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

package io.sensory.api.common;

/**
 * <pre>
 * A type of key supported by the API
 * Note: if you change this enum, ensure to update schema.prisma KeyType
 * </pre>
 *
 * Protobuf enum {@code sensory.api.common.KeyType}
 */
public enum KeyType
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <pre>
   * General Public key - kept for backwards compatability
   * </pre>
   *
   * <code>PUBLIC_KEY = 0;</code>
   */
  PUBLIC_KEY(0),
  /**
   * <pre>
   * ED25519 Public key used for asymmetric cryptographic operations
   * </pre>
   *
   * <code>PUBLIC_KEY_ED25519 = 1;</code>
   */
  PUBLIC_KEY_ED25519(1),
  /**
   * <pre>
   * Shared secret string
   * </pre>
   *
   * <code>SHARED_SECRET = 3;</code>
   */
  SHARED_SECRET(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * General Public key - kept for backwards compatability
   * </pre>
   *
   * <code>PUBLIC_KEY = 0;</code>
   */
  public static final int PUBLIC_KEY_VALUE = 0;
  /**
   * <pre>
   * ED25519 Public key used for asymmetric cryptographic operations
   * </pre>
   *
   * <code>PUBLIC_KEY_ED25519 = 1;</code>
   */
  public static final int PUBLIC_KEY_ED25519_VALUE = 1;
  /**
   * <pre>
   * Shared secret string
   * </pre>
   *
   * <code>SHARED_SECRET = 3;</code>
   */
  public static final int SHARED_SECRET_VALUE = 3;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static KeyType valueOf(int value) {
    return forNumber(value);
  }

  public static KeyType forNumber(int value) {
    switch (value) {
      case 0: return PUBLIC_KEY;
      case 1: return PUBLIC_KEY_ED25519;
      case 3: return SHARED_SECRET;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<KeyType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      KeyType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<KeyType>() {
          @java.lang.Override
          public KeyType findValueByNumber(int number) {
            return KeyType.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return KeyTypeVerifier.INSTANCE;
  }

  private static final class KeyTypeVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new KeyTypeVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return KeyType.forNumber(number) != null;
          }
        };

  private final int value;

  private KeyType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:sensory.api.common.KeyType)
}

