// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/audio/audio.proto

package ai.sensorycloud.api.v1.audio;

/**
 * <pre>
 * Specifies how sensitive the event threshold of the model should be
 * </pre>
 *
 * Protobuf enum {@code sensory.api.v1.audio.ThresholdSensitivity}
 */
public enum ThresholdSensitivity
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <pre>
   * Expects about 32 False Accepts per day for Fixed-Trigger models,
   * and about 10 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>LOWEST = 0;</code>
   */
  LOWEST(0),
  /**
   * <pre>
   * Expects about 16 False Accepts per day for Fixed-Trigger models,
   * and about 5 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>LOW = 1;</code>
   */
  LOW(1),
  /**
   * <pre>
   * Expects about 8 False Accepts per day for Fixed-Trigger models,
   * and about 3 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>MEDIUM = 2;</code>
   */
  MEDIUM(2),
  /**
   * <pre>
   * Expects about 3 False Accepts per day for Fixed-Trigger models,
   * and about 2 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>HIGH = 3;</code>
   */
  HIGH(3),
  /**
   * <pre>
   * Expects about 2 False Accepts per day for Fixed-Trigger models,
   * and about 1 False Accept per day for SoundID models
   * </pre>
   *
   * <code>HIGHEST = 4;</code>
   */
  HIGHEST(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Expects about 32 False Accepts per day for Fixed-Trigger models,
   * and about 10 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>LOWEST = 0;</code>
   */
  public static final int LOWEST_VALUE = 0;
  /**
   * <pre>
   * Expects about 16 False Accepts per day for Fixed-Trigger models,
   * and about 5 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>LOW = 1;</code>
   */
  public static final int LOW_VALUE = 1;
  /**
   * <pre>
   * Expects about 8 False Accepts per day for Fixed-Trigger models,
   * and about 3 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>MEDIUM = 2;</code>
   */
  public static final int MEDIUM_VALUE = 2;
  /**
   * <pre>
   * Expects about 3 False Accepts per day for Fixed-Trigger models,
   * and about 2 False Accepts per day for SoundID models
   * </pre>
   *
   * <code>HIGH = 3;</code>
   */
  public static final int HIGH_VALUE = 3;
  /**
   * <pre>
   * Expects about 2 False Accepts per day for Fixed-Trigger models,
   * and about 1 False Accept per day for SoundID models
   * </pre>
   *
   * <code>HIGHEST = 4;</code>
   */
  public static final int HIGHEST_VALUE = 4;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ThresholdSensitivity valueOf(int value) {
    return forNumber(value);
  }

  public static ThresholdSensitivity forNumber(int value) {
    switch (value) {
      case 0: return LOWEST;
      case 1: return LOW;
      case 2: return MEDIUM;
      case 3: return HIGH;
      case 4: return HIGHEST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ThresholdSensitivity>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ThresholdSensitivity> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ThresholdSensitivity>() {
          @java.lang.Override
          public ThresholdSensitivity findValueByNumber(int number) {
            return ThresholdSensitivity.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return ThresholdSensitivityVerifier.INSTANCE;
  }

  private static final class ThresholdSensitivityVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ThresholdSensitivityVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return ThresholdSensitivity.forNumber(number) != null;
          }
        };

  private final int value;

  private ThresholdSensitivity(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:sensory.api.v1.audio.ThresholdSensitivity)
}

