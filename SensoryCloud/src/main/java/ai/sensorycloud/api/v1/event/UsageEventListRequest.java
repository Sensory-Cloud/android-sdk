// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/event/event.proto

package ai.sensorycloud.api.v1.event;

/**
 * Protobuf type {@code sensory.api.v1.event.UsageEventListRequest}
 */
public  final class UsageEventListRequest extends
    com.google.protobuf.GeneratedMessageLite<
        UsageEventListRequest, UsageEventListRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:sensory.api.v1.event.UsageEventListRequest)
    UsageEventListRequestOrBuilder {
  private UsageEventListRequest() {
    tenantId_ = "";
    billableFunctions_ = emptyIntList();
  }
  public static final int TENANTID_FIELD_NUMBER = 1;
  private java.lang.String tenantId_;
  /**
   * <pre>
   * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @return The tenantId.
   */
  @java.lang.Override
  public java.lang.String getTenantId() {
    return tenantId_;
  }
  /**
   * <pre>
   * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @return The bytes for tenantId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTenantIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(tenantId_);
  }
  /**
   * <pre>
   * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @param value The tenantId to set.
   */
  private void setTenantId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    tenantId_ = value;
  }
  /**
   * <pre>
   * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   */
  private void clearTenantId() {

    tenantId_ = getDefaultInstance().getTenantId();
  }
  /**
   * <pre>
   * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @param value The bytes for tenantId to set.
   */
  private void setTenantIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    tenantId_ = value.toStringUtf8();

  }

  public static final int PAGINATION_FIELD_NUMBER = 2;
  private ai.sensorycloud.api.common.PaginationOptions pagination_;
  /**
   * <pre>
   * Metadata about how to paginate the response
   * </pre>
   *
   * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
   */
  @java.lang.Override
  public boolean hasPagination() {
    return pagination_ != null;
  }
  /**
   * <pre>
   * Metadata about how to paginate the response
   * </pre>
   *
   * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.PaginationOptions getPagination() {
    return pagination_ == null ? ai.sensorycloud.api.common.PaginationOptions.getDefaultInstance() : pagination_;
  }
  /**
   * <pre>
   * Metadata about how to paginate the response
   * </pre>
   *
   * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
   */
  private void setPagination(ai.sensorycloud.api.common.PaginationOptions value) {
    value.getClass();
  pagination_ = value;

    }
  /**
   * <pre>
   * Metadata about how to paginate the response
   * </pre>
   *
   * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePagination(ai.sensorycloud.api.common.PaginationOptions value) {
    value.getClass();
  if (pagination_ != null &&
        pagination_ != ai.sensorycloud.api.common.PaginationOptions.getDefaultInstance()) {
      pagination_ =
        ai.sensorycloud.api.common.PaginationOptions.newBuilder(pagination_).mergeFrom(value).buildPartial();
    } else {
      pagination_ = value;
    }

  }
  /**
   * <pre>
   * Metadata about how to paginate the response
   * </pre>
   *
   * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
   */
  private void clearPagination() {  pagination_ = null;

  }

  public static final int AFTER_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp after_;
  /**
   * <pre>
   * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp after = 3;</code>
   */
  @java.lang.Override
  public boolean hasAfter() {
    return after_ != null;
  }
  /**
   * <pre>
   * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp after = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getAfter() {
    return after_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : after_;
  }
  /**
   * <pre>
   * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp after = 3;</code>
   */
  private void setAfter(com.google.protobuf.Timestamp value) {
    value.getClass();
  after_ = value;

    }
  /**
   * <pre>
   * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp after = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAfter(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (after_ != null &&
        after_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      after_ =
        com.google.protobuf.Timestamp.newBuilder(after_).mergeFrom(value).buildPartial();
    } else {
      after_ = value;
    }

  }
  /**
   * <pre>
   * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp after = 3;</code>
   */
  private void clearAfter() {  after_ = null;

  }

  public static final int BEFORE_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp before_;
  /**
   * <pre>
   * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp before = 4;</code>
   */
  @java.lang.Override
  public boolean hasBefore() {
    return before_ != null;
  }
  /**
   * <pre>
   * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp before = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getBefore() {
    return before_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : before_;
  }
  /**
   * <pre>
   * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp before = 4;</code>
   */
  private void setBefore(com.google.protobuf.Timestamp value) {
    value.getClass();
  before_ = value;

    }
  /**
   * <pre>
   * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp before = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBefore(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (before_ != null &&
        before_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      before_ =
        com.google.protobuf.Timestamp.newBuilder(before_).mergeFrom(value).buildPartial();
    } else {
      before_ = value;
    }

  }
  /**
   * <pre>
   * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp before = 4;</code>
   */
  private void clearBefore() {  before_ = null;

  }

  public static final int BILLABLEFUNCTIONS_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.IntList billableFunctions_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, ai.sensorycloud.api.common.ModelType> billableFunctions_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, ai.sensorycloud.api.common.ModelType>() {
            @java.lang.Override
            public ai.sensorycloud.api.common.ModelType convert(java.lang.Integer from) {
              ai.sensorycloud.api.common.ModelType result = ai.sensorycloud.api.common.ModelType.forNumber(from);
              return result == null ? ai.sensorycloud.api.common.ModelType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @return A list containing the billableFunctions.
   */
  @java.lang.Override
  public java.util.List<ai.sensorycloud.api.common.ModelType> getBillableFunctionsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, ai.sensorycloud.api.common.ModelType>(billableFunctions_, billableFunctions_converter_);
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @return The count of billableFunctions.
   */
  @java.lang.Override
  public int getBillableFunctionsCount() {
    return billableFunctions_.size();
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param index The index of the element to return.
   * @return The billableFunctions at the given index.
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.ModelType getBillableFunctions(int index) {
    ai.sensorycloud.api.common.ModelType result = ai.sensorycloud.api.common.ModelType.forNumber(billableFunctions_.getInt(index));
    return result == null ? ai.sensorycloud.api.common.ModelType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @return A list containing the enum numeric values on the wire for billableFunctions.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getBillableFunctionsValueList() {
    return billableFunctions_;
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of billableFunctions at the given index.
   */
  @java.lang.Override
  public int getBillableFunctionsValue(int index) {
    return billableFunctions_.getInt(index);
  }
  private int billableFunctionsMemoizedSerializedSize;
  private void ensureBillableFunctionsIsMutable() {
    com.google.protobuf.Internal.IntList tmp = billableFunctions_;
    if (!tmp.isModifiable()) {
      billableFunctions_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param index The index to set the value at.
   * @param value The billableFunctions to set.
   */
  private void setBillableFunctions(
      int index, ai.sensorycloud.api.common.ModelType value) {
    value.getClass();
  ensureBillableFunctionsIsMutable();
    billableFunctions_.setInt(index, value.getNumber());
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param value The billableFunctions to add.
   */
  private void addBillableFunctions(ai.sensorycloud.api.common.ModelType value) {
    value.getClass();
  ensureBillableFunctionsIsMutable();
    billableFunctions_.addInt(value.getNumber());
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param values The billableFunctions to add.
   */
  private void addAllBillableFunctions(
      java.lang.Iterable<? extends ai.sensorycloud.api.common.ModelType> values) {
    ensureBillableFunctionsIsMutable();
    for (ai.sensorycloud.api.common.ModelType value : values) {
      billableFunctions_.addInt(value.getNumber());
    }
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   */
  private void clearBillableFunctions() {
    billableFunctions_ = emptyIntList();
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param value The enum numeric value on the wire for billableFunctions to set.
   */
  private void setBillableFunctionsValue(
      int index, int value) {
    ensureBillableFunctionsIsMutable();
    billableFunctions_.setInt(index, value);
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param value The enum numeric value on the wire for billableFunctions to add.
   */
  private void addBillableFunctionsValue(int value) {
    ensureBillableFunctionsIsMutable();
    billableFunctions_.addInt(value);
  }
  /**
   * <pre>
   * Type of event to filter on
   * </pre>
   *
   * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
   * @param values The enum numeric values on the wire for billableFunctions to add.
   */
  private void addAllBillableFunctionsValue(
      java.lang.Iterable<java.lang.Integer> values) {
    ensureBillableFunctionsIsMutable();
    for (int value : values) {
      billableFunctions_.addInt(value);
    }
  }

  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ai.sensorycloud.api.v1.event.UsageEventListRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.v1.event.UsageEventListRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sensory.api.v1.event.UsageEventListRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        ai.sensorycloud.api.v1.event.UsageEventListRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.v1.event.UsageEventListRequest)
      ai.sensorycloud.api.v1.event.UsageEventListRequestOrBuilder {
    // Construct using ai.sensorycloud.api.v1.event.UsageEventListRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     * @return The tenantId.
     */
    @java.lang.Override
    public java.lang.String getTenantId() {
      return instance.getTenantId();
    }
    /**
     * <pre>
     * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     * @return The bytes for tenantId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTenantIdBytes() {
      return instance.getTenantIdBytes();
    }
    /**
     * <pre>
     * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     * @param value The tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantId(
        java.lang.String value) {
      copyOnWrite();
      instance.setTenantId(value);
      return this;
    }
    /**
     * <pre>
     * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantId() {
      copyOnWrite();
      instance.clearTenantId();
      return this;
    }
    /**
     * <pre>
     * Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor.
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     * @param value The bytes for tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTenantIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    @java.lang.Override
    public boolean hasPagination() {
      return instance.hasPagination();
    }
    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.common.PaginationOptions getPagination() {
      return instance.getPagination();
    }
    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    public Builder setPagination(ai.sensorycloud.api.common.PaginationOptions value) {
      copyOnWrite();
      instance.setPagination(value);
      return this;
      }
    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    public Builder setPagination(
        ai.sensorycloud.api.common.PaginationOptions.Builder builderForValue) {
      copyOnWrite();
      instance.setPagination(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    public Builder mergePagination(ai.sensorycloud.api.common.PaginationOptions value) {
      copyOnWrite();
      instance.mergePagination(value);
      return this;
    }
    /**
     * <pre>
     * Metadata about how to paginate the response
     * </pre>
     *
     * <code>.sensory.api.common.PaginationOptions pagination = 2;</code>
     */
    public Builder clearPagination() {  copyOnWrite();
      instance.clearPagination();
      return this;
    }

    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    @java.lang.Override
    public boolean hasAfter() {
      return instance.hasAfter();
    }
    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getAfter() {
      return instance.getAfter();
    }
    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    public Builder setAfter(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setAfter(value);
      return this;
      }
    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    public Builder setAfter(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setAfter(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    public Builder mergeAfter(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeAfter(value);
      return this;
    }
    /**
     * <pre>
     * Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp after = 3;</code>
     */
    public Builder clearAfter() {  copyOnWrite();
      instance.clearAfter();
      return this;
    }

    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    @java.lang.Override
    public boolean hasBefore() {
      return instance.hasBefore();
    }
    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getBefore() {
      return instance.getBefore();
    }
    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    public Builder setBefore(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setBefore(value);
      return this;
      }
    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    public Builder setBefore(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setBefore(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    public Builder mergeBefore(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeBefore(value);
      return this;
    }
    /**
     * <pre>
     * Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp before = 4;</code>
     */
    public Builder clearBefore() {  copyOnWrite();
      instance.clearBefore();
      return this;
    }

    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @return A list containing the billableFunctions.
     */
    @java.lang.Override
    public java.util.List<ai.sensorycloud.api.common.ModelType> getBillableFunctionsList() {
      return instance.getBillableFunctionsList();
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @return The count of billableFunctions.
     */
    @java.lang.Override
    public int getBillableFunctionsCount() {
      return instance.getBillableFunctionsCount();
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param index The index of the element to return.
     * @return The billableFunctions at the given index.
     */
    @java.lang.Override
    public ai.sensorycloud.api.common.ModelType getBillableFunctions(int index) {
      return instance.getBillableFunctions(index);
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param index The index to set the value at.
     * @param value The billableFunctions to set.
     * @return This builder for chaining.
     */
    public Builder setBillableFunctions(
        int index, ai.sensorycloud.api.common.ModelType value) {
      copyOnWrite();
      instance.setBillableFunctions(index, value);
      return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param value The billableFunctions to add.
     * @return This builder for chaining.
     */
    public Builder addBillableFunctions(ai.sensorycloud.api.common.ModelType value) {
      copyOnWrite();
      instance.addBillableFunctions(value);
      return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param values The billableFunctions to add.
     * @return This builder for chaining.
     */
    public Builder addAllBillableFunctions(
        java.lang.Iterable<? extends ai.sensorycloud.api.common.ModelType> values) {
      copyOnWrite();
      instance.addAllBillableFunctions(values);  return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearBillableFunctions() {
      copyOnWrite();
      instance.clearBillableFunctions();
      return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @return A list containing the enum numeric values on the wire for billableFunctions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getBillableFunctionsValueList() {
      return java.util.Collections.unmodifiableList(
          instance.getBillableFunctionsValueList());
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of billableFunctions at the given index.
     */
    @java.lang.Override
    public int getBillableFunctionsValue(int index) {
      return instance.getBillableFunctionsValue(index);
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for billableFunctions to set.
     * @return This builder for chaining.
     */
    public Builder setBillableFunctionsValue(
        int index, int value) {
      copyOnWrite();
      instance.setBillableFunctionsValue(index, value);
      return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param value The enum numeric value on the wire for billableFunctions to add.
     * @return This builder for chaining.
     */
    public Builder addBillableFunctionsValue(int value) {
      copyOnWrite();
      instance.addBillableFunctionsValue(value);
      return this;
    }
    /**
     * <pre>
     * Type of event to filter on
     * </pre>
     *
     * <code>repeated .sensory.api.common.ModelType billableFunctions = 5;</code>
     * @param values The enum numeric values on the wire for billableFunctions to add.
     * @return This builder for chaining.
     */
    public Builder addAllBillableFunctionsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllBillableFunctionsValue(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sensory.api.v1.event.UsageEventListRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new ai.sensorycloud.api.v1.event.UsageEventListRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "tenantId_",
            "pagination_",
            "after_",
            "before_",
            "billableFunctions_",
          };
          java.lang.String info =
              "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0001\u0000\u0001\u0208\u0002\t" +
              "\u0003\t\u0004\t\u0005,";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<ai.sensorycloud.api.v1.event.UsageEventListRequest> parser = PARSER;
        if (parser == null) {
          synchronized (ai.sensorycloud.api.v1.event.UsageEventListRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<ai.sensorycloud.api.v1.event.UsageEventListRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sensory.api.v1.event.UsageEventListRequest)
  private static final ai.sensorycloud.api.v1.event.UsageEventListRequest DEFAULT_INSTANCE;
  static {
    UsageEventListRequest defaultInstance = new UsageEventListRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      UsageEventListRequest.class, defaultInstance);
  }

  public static ai.sensorycloud.api.v1.event.UsageEventListRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UsageEventListRequest> PARSER;

  public static com.google.protobuf.Parser<UsageEventListRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

