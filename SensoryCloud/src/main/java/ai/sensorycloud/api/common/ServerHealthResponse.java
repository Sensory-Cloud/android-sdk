// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

package ai.sensorycloud.api.common;

/**
 * <pre>
 * Response from a GetHealth request
 * </pre>
 *
 * Protobuf type {@code sensory.api.common.ServerHealthResponse}
 */
public  final class ServerHealthResponse extends
    com.google.protobuf.GeneratedMessageLite<
        ServerHealthResponse, ServerHealthResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:sensory.api.common.ServerHealthResponse)
    ServerHealthResponseOrBuilder {
  private ServerHealthResponse() {
    serverVersion_ = "";
    id_ = "";
    services_ = emptyProtobufList();
  }
  public static final int ISHEALTHY_FIELD_NUMBER = 1;
  private boolean isHealthy_;
  /**
   * <pre>
   * Is healthy indication. True if all services are healthy.
   * </pre>
   *
   * <code>bool isHealthy = 1;</code>
   * @return The isHealthy.
   */
  @java.lang.Override
  public boolean getIsHealthy() {
    return isHealthy_;
  }
  /**
   * <pre>
   * Is healthy indication. True if all services are healthy.
   * </pre>
   *
   * <code>bool isHealthy = 1;</code>
   * @param value The isHealthy to set.
   */
  private void setIsHealthy(boolean value) {
    
    isHealthy_ = value;
  }
  /**
   * <pre>
   * Is healthy indication. True if all services are healthy.
   * </pre>
   *
   * <code>bool isHealthy = 1;</code>
   */
  private void clearIsHealthy() {
    
    isHealthy_ = false;
  }

  public static final int SERVERVERSION_FIELD_NUMBER = 2;
  private java.lang.String serverVersion_;
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The serverVersion.
   */
  @java.lang.Override
  public java.lang.String getServerVersion() {
    return serverVersion_;
  }
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @return The bytes for serverVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServerVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(serverVersion_);
  }
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @param value The serverVersion to set.
   */
  private void setServerVersion(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    serverVersion_ = value;
  }
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   */
  private void clearServerVersion() {
    
    serverVersion_ = getDefaultInstance().getServerVersion();
  }
  /**
   * <pre>
   * Currently running server version
   * </pre>
   *
   * <code>string serverVersion = 2;</code>
   * @param value The bytes for serverVersion to set.
   */
  private void setServerVersionBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    serverVersion_ = value.toStringUtf8();
    
  }

  public static final int ID_FIELD_NUMBER = 3;
  private java.lang.String id_;
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @param value The id to set.
   */
  private void setId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    id_ = value;
  }
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   */
  private void clearId() {
    
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Unique Identifier for the particular server
   * </pre>
   *
   * <code>string id = 3;</code>
   * @param value The bytes for id to set.
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    id_ = value.toStringUtf8();
    
  }

  public static final int SERVICES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<ai.sensorycloud.api.common.ServiceHealth> services_;
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public java.util.List<ai.sensorycloud.api.common.ServiceHealth> getServicesList() {
    return services_;
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  public java.util.List<? extends ai.sensorycloud.api.common.ServiceHealthOrBuilder> 
      getServicesOrBuilderList() {
    return services_;
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public int getServicesCount() {
    return services_.size();
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.ServiceHealth getServices(int index) {
    return services_.get(index);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  public ai.sensorycloud.api.common.ServiceHealthOrBuilder getServicesOrBuilder(
      int index) {
    return services_.get(index);
  }
  private void ensureServicesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<ai.sensorycloud.api.common.ServiceHealth> tmp = services_;
    if (!tmp.isModifiable()) {
      services_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void setServices(
      int index, ai.sensorycloud.api.common.ServiceHealth value) {
    value.getClass();
  ensureServicesIsMutable();
    services_.set(index, value);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void addServices(ai.sensorycloud.api.common.ServiceHealth value) {
    value.getClass();
  ensureServicesIsMutable();
    services_.add(value);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void addServices(
      int index, ai.sensorycloud.api.common.ServiceHealth value) {
    value.getClass();
  ensureServicesIsMutable();
    services_.add(index, value);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void addAllServices(
      java.lang.Iterable<? extends ai.sensorycloud.api.common.ServiceHealth> values) {
    ensureServicesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, services_);
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void clearServices() {
    services_ = emptyProtobufList();
  }
  /**
   * <pre>
   * List of services and their health statuses
   * </pre>
   *
   * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
   */
  private void removeServices(int index) {
    ensureServicesIsMutable();
    services_.remove(index);
  }

  public static final int SERVERTYPE_FIELD_NUMBER = 5;
  private int serverType_;
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The enum numeric value on the wire for serverType.
   */
  @java.lang.Override
  public int getServerTypeValue() {
    return serverType_;
  }
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @return The serverType.
   */
  @java.lang.Override
  public ai.sensorycloud.api.common.ServerType getServerType() {
    ai.sensorycloud.api.common.ServerType result = ai.sensorycloud.api.common.ServerType.forNumber(serverType_);
    return result == null ? ai.sensorycloud.api.common.ServerType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @param value The enum numeric value on the wire for serverType to set.
   */
  private void setServerTypeValue(int value) {
      serverType_ = value;
  }
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   * @param value The serverType to set.
   */
  private void setServerType(ai.sensorycloud.api.common.ServerType value) {
    serverType_ = value.getNumber();
    
  }
  /**
   * <pre>
   * The type of server that is sending the health response
   * </pre>
   *
   * <code>.sensory.api.common.ServerType serverType = 5;</code>
   */
  private void clearServerType() {
    
    serverType_ = 0;
  }

  public static final int ISLEADER_FIELD_NUMBER = 6;
  private boolean isLeader_;
  /**
   * <code>bool isLeader = 6;</code>
   * @return The isLeader.
   */
  @java.lang.Override
  public boolean getIsLeader() {
    return isLeader_;
  }
  /**
   * <code>bool isLeader = 6;</code>
   * @param value The isLeader to set.
   */
  private void setIsLeader(boolean value) {
    
    isLeader_ = value;
  }
  /**
   * <code>bool isLeader = 6;</code>
   */
  private void clearIsLeader() {
    
    isLeader_ = false;
  }

  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ai.sensorycloud.api.common.ServerHealthResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(ai.sensorycloud.api.common.ServerHealthResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Response from a GetHealth request
   * </pre>
   *
   * Protobuf type {@code sensory.api.common.ServerHealthResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        ai.sensorycloud.api.common.ServerHealthResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:sensory.api.common.ServerHealthResponse)
      ai.sensorycloud.api.common.ServerHealthResponseOrBuilder {
    // Construct using ai.sensorycloud.api.common.ServerHealthResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @return The isHealthy.
     */
    @java.lang.Override
    public boolean getIsHealthy() {
      return instance.getIsHealthy();
    }
    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @param value The isHealthy to set.
     * @return This builder for chaining.
     */
    public Builder setIsHealthy(boolean value) {
      copyOnWrite();
      instance.setIsHealthy(value);
      return this;
    }
    /**
     * <pre>
     * Is healthy indication. True if all services are healthy.
     * </pre>
     *
     * <code>bool isHealthy = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsHealthy() {
      copyOnWrite();
      instance.clearIsHealthy();
      return this;
    }

    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return The serverVersion.
     */
    @java.lang.Override
    public java.lang.String getServerVersion() {
      return instance.getServerVersion();
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return The bytes for serverVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServerVersionBytes() {
      return instance.getServerVersionBytes();
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @param value The serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersion(
        java.lang.String value) {
      copyOnWrite();
      instance.setServerVersion(value);
      return this;
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerVersion() {
      copyOnWrite();
      instance.clearServerVersion();
      return this;
    }
    /**
     * <pre>
     * Currently running server version
     * </pre>
     *
     * <code>string serverVersion = 2;</code>
     * @param value The bytes for serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServerVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Unique Identifier for the particular server
     * </pre>
     *
     * <code>string id = 3;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    @java.lang.Override
    public java.util.List<ai.sensorycloud.api.common.ServiceHealth> getServicesList() {
      return java.util.Collections.unmodifiableList(
          instance.getServicesList());
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    @java.lang.Override
    public int getServicesCount() {
      return instance.getServicesCount();
    }/**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    @java.lang.Override
    public ai.sensorycloud.api.common.ServiceHealth getServices(int index) {
      return instance.getServices(index);
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder setServices(
        int index, ai.sensorycloud.api.common.ServiceHealth value) {
      copyOnWrite();
      instance.setServices(index, value);
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder setServices(
        int index, ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      copyOnWrite();
      instance.setServices(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(ai.sensorycloud.api.common.ServiceHealth value) {
      copyOnWrite();
      instance.addServices(value);
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        int index, ai.sensorycloud.api.common.ServiceHealth value) {
      copyOnWrite();
      instance.addServices(index, value);
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      copyOnWrite();
      instance.addServices(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addServices(
        int index, ai.sensorycloud.api.common.ServiceHealth.Builder builderForValue) {
      copyOnWrite();
      instance.addServices(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder addAllServices(
        java.lang.Iterable<? extends ai.sensorycloud.api.common.ServiceHealth> values) {
      copyOnWrite();
      instance.addAllServices(values);
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder clearServices() {
      copyOnWrite();
      instance.clearServices();
      return this;
    }
    /**
     * <pre>
     * List of services and their health statuses
     * </pre>
     *
     * <code>repeated .sensory.api.common.ServiceHealth services = 4;</code>
     */
    public Builder removeServices(int index) {
      copyOnWrite();
      instance.removeServices(index);
      return this;
    }

    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return The enum numeric value on the wire for serverType.
     */
    @java.lang.Override
    public int getServerTypeValue() {
      return instance.getServerTypeValue();
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @param value The serverType to set.
     * @return This builder for chaining.
     */
    public Builder setServerTypeValue(int value) {
      copyOnWrite();
      instance.setServerTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return The serverType.
     */
    @java.lang.Override
    public ai.sensorycloud.api.common.ServerType getServerType() {
      return instance.getServerType();
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @param value The enum numeric value on the wire for serverType to set.
     * @return This builder for chaining.
     */
    public Builder setServerType(ai.sensorycloud.api.common.ServerType value) {
      copyOnWrite();
      instance.setServerType(value);
      return this;
    }
    /**
     * <pre>
     * The type of server that is sending the health response
     * </pre>
     *
     * <code>.sensory.api.common.ServerType serverType = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerType() {
      copyOnWrite();
      instance.clearServerType();
      return this;
    }

    /**
     * <code>bool isLeader = 6;</code>
     * @return The isLeader.
     */
    @java.lang.Override
    public boolean getIsLeader() {
      return instance.getIsLeader();
    }
    /**
     * <code>bool isLeader = 6;</code>
     * @param value The isLeader to set.
     * @return This builder for chaining.
     */
    public Builder setIsLeader(boolean value) {
      copyOnWrite();
      instance.setIsLeader(value);
      return this;
    }
    /**
     * <code>bool isLeader = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsLeader() {
      copyOnWrite();
      instance.clearIsLeader();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sensory.api.common.ServerHealthResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new ai.sensorycloud.api.common.ServerHealthResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "isHealthy_",
            "serverVersion_",
            "id_",
            "services_",
            ai.sensorycloud.api.common.ServiceHealth.class,
            "serverType_",
            "isLeader_",
          };
          java.lang.String info =
              "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0001\u0000\u0001\u0007\u0002\u0208" +
              "\u0003\u0208\u0004\u001b\u0005\f\u0006\u0007";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<ai.sensorycloud.api.common.ServerHealthResponse> parser = PARSER;
        if (parser == null) {
          synchronized (ai.sensorycloud.api.common.ServerHealthResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<ai.sensorycloud.api.common.ServerHealthResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sensory.api.common.ServerHealthResponse)
  private static final ai.sensorycloud.api.common.ServerHealthResponse DEFAULT_INSTANCE;
  static {
    ServerHealthResponse defaultInstance = new ServerHealthResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ServerHealthResponse.class, defaultInstance);
  }

  public static ai.sensorycloud.api.common.ServerHealthResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ServerHealthResponse> PARSER;

  public static com.google.protobuf.Parser<ServerHealthResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

